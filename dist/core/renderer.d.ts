export interface GeoJSONRendererOption {
    backgroundColor?: string;
    pixelColor?: string;
    pixelSize?: number;
    gapSize?: number;
}
export declare class GeoJSONRenderer {
    private importedParent;
    private canvas;
    private context;
    private parent;
    stageHeight: number;
    stageWidth: number;
    stageX: number;
    stageY: number;
    private polgons;
    static geoJsonWidth: number;
    static geoJsonHeight: number;
    private geoJsonRendererOption?;
    private zoom;
    private FixedPixelSize;
    private FixedRadius;
    private pixelSize;
    private radius;
    private dots;
    mouseRatioX: number;
    mouseRatioY: number;
    offsetX: number;
    offsetY: number;
    startClientX: number;
    startClientY: number;
    pixelColor: string;
    constructor(importedParent: HTMLElement, geoJsonRendererOption?: GeoJSONRendererOption);
    addZoom: (zoom: number) => void;
    getCanvas: () => HTMLCanvasElement;
    getContext: () => CanvasRenderingContext2D;
    private setOption;
    private initGeojson;
    private getStageRatio;
    private getGeoJsonRatio;
    private resize;
    private draw;
    run: () => void;
    move: (moveX: number, moveY: number) => void;
    onMouseMove: (event: MouseEvent) => void;
    onWheel: (event: WheelEvent) => void;
    onMoveMouse: (event: MouseEvent) => void;
    onMouseDown: (event: MouseEvent) => void;
    onMouseUp: (event: MouseEvent) => void;
}
