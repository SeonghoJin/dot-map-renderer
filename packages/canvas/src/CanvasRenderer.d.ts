import { Canvas, Drawable } from '@dot-map-renderer/component';
import { IRendererOption } from './IRendererOption';
import { IRenderer } from './IRenderer';
import { RendererContext } from './RendererContext';
export declare class CanvasRenderer implements IRenderer {
    private readonly bufferCanvas;
    private readonly polygons;
    private attachingElement;
    readonly canvas: Canvas;
    readonly parent: HTMLElement;
    components: Array<Drawable>;
    option: IRendererOption;
    stageHeight: number;
    stageWidth: number;
    stageX: number;
    stageY: number;
    image: HTMLImageElement;
    zoom: number;
    get pixelAndGapSize(): number;
    get pixelSize(): number;
    get gapSize(): number;
    get canvasOffsetWidth(): number;
    get canvasOffsetHeight(): number;
    constructor(attachingElement: HTMLElement, geoJsonRendererOption: IRendererOption);
    private loadGeoJson;
    private initHTML;
    private initInteraction;
    private initImage;
    private resizeStage;
    private resizePolygons;
    private makeDots;
    run: () => void;
    resize: () => void;
    draw: () => void;
    drawDotMaps: () => void;
    drawComponents: () => void;
    getContext: () => RendererContext;
}
